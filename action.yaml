name: Upload Python Package to GAR
description: Extracts a Python package and uploads to Google Artifact Registry
inputs:
  inputs:
  credentials-json:
    description: Google credentials json
    required: true
  project-id:
    description: Google cloud project id
    required: true
  package-name:
    description: Python package name
    required: true
  version:
    description: Version to publish
    required: false
    default: ${{ github.event.release.tag_name }}
  scope:
    description: Artifact registry scope
    required: false
    default: '@unsupervised'
  repository:
    description: Artifact registry repository name
    required: false
    default: python
  location:
    description: Artifact registry location
    required: false
    default: us-central1
  dist-directory:
    description: Location of package
    required: false
    default: dist/*
runs:
  using: composite
  steps:
    - id: auth
    uses: google-github-actions/auth@v0
    with:
      credentials_json: ${{ inputs.credentials-json }}
      - uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ inputs.project-id }}
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      run: |
        python setup.py sdist bdist_wheel
        twine upload --repository-url https://${{ inputs.location }}-python.pkg.dev/${{ inputs.project_id }}/${{ inputs.repository}} ${{ inputs.dist-directory }}
