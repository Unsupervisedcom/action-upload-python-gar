name: Upload Python Package to GAR
description: Extracts a Python package and uploads to Google Artifact Registry
inputs:
  token:
    description: 'Github token to use'
    required: false
    default: ${{ github.token }}
  tag:
    description: 'Release tag to fetch chart from'
    required: false
    default: ${{ github.event.release.tag_name }}
  credentials-json:
    description: 'gcloud service account credentials json'
    required: true
  project-id:
    description: 'gcloud project id'
    required: true
  release-asset-name:
    description: 'the asset name containing the package, must be a tar file'
    required: true
  region:
    description: 'artifact registry region'
    required: false
    default: 'us-central1'
  repository:
    description: 'artifact registry repository'
    required: false
    default: 'charts'
runs:
  using: composite
  steps:
    - name: Fetch release
      uses: robinraju/release-downloader@v1.3
      with:
        repository: ${{ github.repository }}
        tag: ${{ inputs.tag }}
        fileName: ${{ inputs.release-asset-name }}
        token: ${{ inputs.token }}
    - id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.credentials-json }}
    - uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ inputs.project-id }}
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.8'
    - name: Install dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine
    - name: Build and publish
      run: |
      shell: bash
        python setup.py sdist bdist_wheel
        twine upload --repository-url https://${{ inputs.region }}-python.pkg.dev/${{ inputs.project_id }}/${{ inputs.repository}} ${{ inputs.dist-directory }}
